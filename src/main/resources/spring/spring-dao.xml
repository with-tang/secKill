<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context  
         http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- 1:配置数据库 -->
    <context:property-placeholder system-properties-mode="NEVER" location="classpath:jdbc.properties"/>        
    <!-- 2:配置数据库连接池 -->
  		<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
  		<property name="driverClass" value="${driver}"/>
        <property name="jdbcUrl" value="${url}"/>
        <property name="user" value="${user}"/>
        <property name="password" value="${password}"/>
	
        <!-- c3p0 数据库私有属性 -->
        <property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="3"/>
        <!-- don't commit when close the connection -->
        <property name="autoCommitOnClose" value="false"/>
        <!-- get connection timeout -->
        <property name="checkoutTimeout" value="10000"/>
        <!-- get connection retry times -->
        <property name="acquireIncrement" value="2"/>
    </bean>
    <!-- 3:config sqlSessionFactory -->
    <bean id="sqlSessiongFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- inject database pool -->
        <property name="dataSource" ref="dataSource"/>
        <!-- config Mybatis configuration -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- scan entity and use alias:com.netease.seckill.entity.Seckill->Seckill  -->
        <property name="typeAliasesPackage" value="org.seckill.entity"/>
        <!-- scan sql configuration -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>
    <!-- 4:config scan DAO interface,dynamatic implements dao interface,and inject to spring container -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- inject sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessiongFactory"/>
        <!-- scan DAO interface -->
        <property name="basePackage" value="org.seckill.dao"/>
    </bean>
    <!-- 配置Redis数据库DAO -->
    <bean id="redisDao" class="org.seckill.dao.cache.RedisDao">
    <!-- 构造函数注入 -->
    <constructor-arg index="0" value="192.168.27.159"></constructor-arg>
    <constructor-arg index="1" value="6379"></constructor-arg>
    </bean>
</beans>